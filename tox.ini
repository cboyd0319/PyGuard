[tox]
# Tox configuration for testing PyGuard across multiple Python versions
envlist = py38,py39,py310,py311,py312,lint,type,security
isolated_build = True
skip_missing_interpreters = True

[testenv]
# Test environment configuration
deps =
    pytest>=7.4.0
    pytest-cov>=4.1.0
    pytest-mock>=3.11.0
commands =
    pytest {posargs:tests/}

[testenv:lint]
# Linting environment
deps =
    ruff
    pylint
    flake8
commands =
    ruff check pyguard/
    pylint pyguard/
    flake8 pyguard/

[testenv:type]
# Type checking environment
deps =
    mypy>=1.5.0
commands =
    mypy pyguard/ --ignore-missing-imports

[testenv:security]
# Security scanning environment
deps =
    bandit>=1.7.5
    safety>=2.3.0
commands =
    bandit -r pyguard/ -ll
    safety check

[testenv:format]
# Code formatting check
deps =
    black>=23.0.0
    isort>=5.12.0
commands =
    black --check pyguard/ tests/ examples/
    isort --check pyguard/ tests/ examples/

[testenv:format-fix]
# Apply code formatting
deps =
    black>=23.0.0
    isort>=5.12.0
commands =
    black pyguard/ tests/ examples/
    isort pyguard/ tests/ examples/

[testenv:docs]
# Documentation building (placeholder)
deps =
    sphinx
    sphinx-rtd-theme
commands =
    python -c "print('Documentation building not yet configured')"

[testenv:benchmark]
# Performance benchmarks
deps =
    pytest>=7.4.0
    pytest-benchmark
commands =
    python benchmarks/bench_security.py

[testenv:coverage]
# Generate coverage report
deps =
    pytest>=7.4.0
    pytest-cov>=4.1.0
commands =
    pytest --cov=pyguard --cov-report=html --cov-report=term-missing tests/

[flake8]
max-line-length = 100
extend-ignore = E203, E266, E501, W503
exclude =
    .git,
    __pycache__,
    build,
    dist,
    .venv,
    venv,
    .tox,
    .eggs,
    *.egg

[isort]
profile = black
line_length = 100
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
