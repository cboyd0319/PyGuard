name: Setup Python with PyGuard Dependencies
description: Sets up Python with caching and installs PyGuard dependencies
inputs:
  python-version:
    description: Python version to use
    required: false
    default: '3.13'
  install-dev:
    description: Install development dependencies
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          pyproject.toml
          setup.py

    - name: Cache pip packages
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ inputs.python-version }}-${{ hashFiles('**/pyproject.toml', '**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ inputs.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      shell: bash
      run: |
        set -euo pipefail
        python -m pip install --upgrade pip setuptools wheel
        if [ "${{ inputs.install-dev }}" = "true" ]; then
          pip install -e ".[dev]"
        else
          pip install -e .
        fi
