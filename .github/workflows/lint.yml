name: Linting & Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Check formatting with Black
      run: |
        black --check pyguard/ tests/ examples/ --line-length=100

    - name: Check import sorting with isort
      run: |
        isort --check-only pyguard/ tests/ examples/ --profile=black

    - name: Lint with Pylint
      run: |
        pylint pyguard/ --max-line-length=100 --disable=C0111 || echo "Pylint found issues"
      continue-on-error: true

    - name: Type check with mypy
      run: |
        mypy pyguard/ --ignore-missing-imports

    - name: Lint with flake8
      run: |
        flake8 pyguard/ --max-line-length=100 --ignore=E203,W503

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit
      run: |
        bandit -r pyguard/ -ll
      continue-on-error: true

    - name: Run Safety check
      run: |
        safety check --json || echo "Safety check completed"
      continue-on-error: true
