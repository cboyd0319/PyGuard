name: Coverage

on:
  push:
    branches: [ main ]
    paths:
      - 'pyguard/**/*.py'
      - 'tests/**/*.py'
      - 'pyproject.toml'
      - 'setup.py'
      - 'pytest.ini'
      - '.github/workflows/coverage.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'pyguard/**/*.py'
      - 'tests/**/*.py'
      - 'pyproject.toml'
      - 'setup.py'
      - 'pytest.ini'
      - '.github/workflows/coverage.yml'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  coverage:
    name: Code Coverage Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 1

    - name: Setup Python and dependencies
      uses: ./.github/actions/setup-python
      with:
        python-version: '3.13'
        install-dev: 'true'

    - name: Run tests with coverage
      shell: bash
      run: |
        set -euo pipefail
        pytest --cov=pyguard --cov-report=xml --cov-report=html --cov-report=term | tee coverage-output.txt

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload HTML coverage report
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: coverage-report-html
        path: htmlcov/
        retention-days: 30
      if: always()

    - name: Coverage summary
      if: always()
      shell: bash
      run: |
        {
          echo "## ðŸ“Š Coverage Report"
          echo ""
          echo '```'
          tail -20 coverage-output.txt || echo "No coverage data available"
          echo '```'
          echo ""
          echo "Full HTML report available in artifacts."
        } >> "${GITHUB_STEP_SUMMARY}"
