name: Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'pyguard/**/*.py'
      - 'tests/**/*.py'
      - 'pyproject.toml'
      - 'setup.py'
      - 'pytest.ini'
      - 'tox.ini'
      - '.github/workflows/test.yml'
      - '.github/actions/setup-python/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'pyguard/**/*.py'
      - 'tests/**/*.py'
      - 'pyproject.toml'
      - 'setup.py'
      - 'pytest.ini'
      - 'tox.ini'
      - '.github/workflows/test.yml'
      - '.github/actions/setup-python/**'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.11', '3.12', '3.13']
        include:
          # Test on macOS and Windows with latest Python only
          - os: macos-latest
            python-version: '3.13'
          - os: windows-latest
            python-version: '3.13'

    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 1

    - name: Setup Python and dependencies
      uses: ./.github/actions/setup-python
      with:
        python-version: ${{ matrix.python-version }}
        install-dev: 'true'

    - name: Run tests
      shell: bash
      run: |
        set -euo pipefail
        pytest -v --tb=short --maxfail=3

    - name: Test CLI
      shell: bash
      run: |
        set -euo pipefail
        pyguard --help
        pyguard --version

    - name: Add test summary
      if: always()
      shell: bash
      run: |
        {
          echo "## Test Results: Python ${{ matrix.python-version }} on ${{ matrix.os }}"
          echo ""
          if [ "${{ job.status }}" = "success" ]; then
            echo "[PASS] All tests passed"
          else
            echo "[FAIL] Tests failed"
          fi
        } >> "${GITHUB_STEP_SUMMARY}"
